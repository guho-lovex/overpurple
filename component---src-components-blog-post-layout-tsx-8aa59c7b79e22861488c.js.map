{"version":3,"file":"component---src-components-blog-post-layout-tsx-8aa59c7b79e22861488c.js","mappings":"+MAOA,MAyDaA,EAAOC,IAA6C,IAA1CC,MAAQC,eAAgBC,IAAaH,EAC1D,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UAlEuBC,IAGZ,IAAAC,EAAA,IAFTV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAEC,EAAMZ,eAAgBC,GAAM,SACpDY,GACIL,EACJ,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAK,QACpCY,EAAUf,EAAKgB,gBAErB,OACEf,EAAAA,cAACgB,EAAAA,GAAM,CAACL,SAAUA,EAAUT,MAAOU,EAAWE,QAASA,GACrDd,EAAAA,cAAA,WACEiB,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETnB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIoB,SAAS,YAAYrB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,SAAID,EAAKI,YAAYkB,OAEvBrB,EAAAA,cAAA,WACEsB,wBAAyB,CAAEC,OAAQxB,EAAKyB,MACxCJ,SAAS,gBAEXpB,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACyB,EAAAA,EAAS,QAGdzB,EAAAA,cAAA,OAAKiB,UAAU,iBACbjB,EAAAA,cAAA,MACE0B,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX/B,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAIzB,EAAS0B,OAAOC,KAAMC,IAAI,QAAO,KACtC5B,EAASL,YAAYD,QAI9BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAIxB,EAAKyB,OAAOC,KAAMC,IAAI,QAC7B3B,EAAKN,YAAYD,MAAM,SAM3B,C","sources":["webpack://overpurlple/./src/components/blogPostLayout.tsx"],"sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport BioHeader from './bioHeader';\nimport { Layout } from './layout';\nimport SEO from './seo';\n\nconst BlogPostLayout = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}: any) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  const outline = post.tableOfContents;\n\n  return (\n    <Layout location={location} title={siteTitle} outline={outline}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <BioHeader />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }: any) => {\n  return (\n    <SEO\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  );\n};\n\nexport default BlogPostLayout;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      tableOfContents\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["Head","_ref2","data","markdownRemark","post","React","SEO","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","outline","tableOfContents","Layout","className","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","BioHeader","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}